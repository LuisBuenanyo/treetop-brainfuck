grammar Brainfuck

  rule program
    op* {
      def run
        state = OpenStruct.new slots: [0]*3000, position: 0
        elements.map{|op| op.exec(state) }
      end
    }
  end

  rule op
    loop / next / prev / inc / dec / in / out
  end

  rule loop
    '[' ops:op* ']' {
      def exec(state)
        ops.elements.map{|op| op.exec(state) } while state.slots[state.position] != 0
      end
    }
  end

  rule next
    '>' { def exec(state) state.position += 1 end }
  end

  rule prev
    '<' { def exec(state) state.position -= 1 end }
  end

  rule inc
    '+' { def exec(state) state.slots[state.position] += 1 end }
  end

  rule dec
    '-' { def exec(state) state.slots[state.position] -= 1 end }
  end

  rule in
    ',' {
      def exec(state)
        state.slots[state.position] = get
      end
      
      def get
        `stty raw -echo`; r = STDIN.getc; `stty -raw echo`
        r
      end
    }
  end

  rule out
    '.' { 
      def exec(state)
        print state.slots[state.position].chr
      end
    }
  end
end
